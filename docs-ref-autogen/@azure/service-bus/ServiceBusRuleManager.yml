### YamlMime:TSType
name: ServiceBusRuleManager
uid: '@azure/service-bus.ServiceBusRuleManager'
package: '@azure/service-bus'
summary: >-
  Allows rules for a subscription to be managed. This rule manager requires only
  Listen claims, whereas the

  <xref:@azure/service-bus.ServiceBusAdministrationClient> requires Manage
  claims.
fullName: ServiceBusRuleManager
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      createRule(string, SqlRuleFilter | CorrelationRuleFilter,
      OperationOptionsBase)
    uid: '@azure/service-bus.ServiceBusRuleManager.createRule'
    package: '@azure/service-bus'
    summary: >-
      Adds a rule to the current subscription to filter the messages reaching
      from topic to the subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createRule(ruleName: string, filter: SqlRuleFilter |
        CorrelationRuleFilter, options?: OperationOptionsBase): Promise<void>
      parameters:
        - id: ruleName
          type: string
          description: the name of the rule
        - id: filter
          type: >-
            <xref uid="@azure/service-bus.SqlRuleFilter" /> | <xref
            uid="@azure/service-bus.CorrelationRuleFilter" />
          description: the filter expression that the rule evaluates.
        - id: options
          type: <xref uid="@azure/service-bus.OperationOptionsBase" />
          description: >
            The options that can be used to abort, trace and control other
            configurations on the request.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      createRule(string, SqlRuleFilter | CorrelationRuleFilter, SqlRuleAction,
      OperationOptionsBase)
    uid: '@azure/service-bus.ServiceBusRuleManager.createRule_1'
    package: '@azure/service-bus'
    summary: >-
      Adds a rule to the current subscription to filter the messages reaching
      from topic to the subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createRule(ruleName: string, filter: SqlRuleFilter |
        CorrelationRuleFilter, ruleAction?: SqlRuleAction, options?:
        OperationOptionsBase): Promise<void>
      parameters:
        - id: ruleName
          type: string
          description: the name of the rule
        - id: filter
          type: >-
            <xref uid="@azure/service-bus.SqlRuleFilter" /> | <xref
            uid="@azure/service-bus.CorrelationRuleFilter" />
          description: the filter expression that the rule evaluates.
        - id: ruleAction
          type: <xref uid="@azure/service-bus.SqlRuleAction" />
          description: >-
            The SQL like expression that can be executed on the message should
            the associated filter apply.
        - id: options
          type: <xref uid="@azure/service-bus.OperationOptionsBase" />
          description: >
            The options that can be used to abort, trace and control other
            configurations on the request.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'deleteRule(string, OperationOptionsBase)'
    uid: '@azure/service-bus.ServiceBusRuleManager.deleteRule'
    package: '@azure/service-bus'
    summary: Deletes a rule.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRule(ruleName: string, options?: OperationOptionsBase):
        Promise<void>
      parameters:
        - id: ruleName
          type: string
          description: |
            the name of the rule
        - id: options
          type: <xref uid="@azure/service-bus.OperationOptionsBase" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: listRules(OperationOptions)
    uid: '@azure/service-bus.ServiceBusRuleManager.listRules'
    package: '@azure/service-bus'
    summary: |
      Returns an async iterable iterator to list all the rules
      under the specified subscription.
      .byPage() returns an async iterable iterator to list the rules in pages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRules(options?: OperationOptions):
        PagedAsyncIterableIterator<RuleProperties>
      parameters:
        - id: options
          type: OperationOptions
          description: ''
      return:
        description: An asyncIterableIterator that supports paging.
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/service-bus.RuleProperties" />&gt;
